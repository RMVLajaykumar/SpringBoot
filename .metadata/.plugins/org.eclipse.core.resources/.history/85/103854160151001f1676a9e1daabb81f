package com.monocept.app.entity;

import java.time.LocalDateTime;
import java.util.List;

import javax.management.ConstructorParameters;

import com.fasterxml.jackson.annotation.JsonManagedReference;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.FutureOrPresent;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Table(name="blog")

@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@ToString
@Builder
public class Blog {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	@NotBlank(message="title should not be empty")
	private String title;
	@NotBlank(message="give some category")
	private String category;
	@NotBlank(message="enter data")
	@Size(min=50,max=250 ,message="please check size")
	private String data;
	@NotNull(message = "Please enter the published date")
	@FutureOrPresent(message = "The published date must be in the present or future")
	private LocalDateTime publishedDate = LocalDateTime.now();
	private boolean published;
	@OneToMany(cascade = { CascadeType.MERGE, CascadeType.PERSIST,
			CascadeType.REFRESH }, orphanRemoval = true, mappedBy = "blog")
	@JsonManagedReference
	private List<Comment> comment;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}
	public String getCategory() {
		return category;
	}
	public void setCategory(String category) {
		this.category = category;
	}
	public String getData() {
		return data;
	}
	public void setData(String data) {
		this.data = data;
	}
	public LocalDateTime getPublishedDate() {
		return publishedDate;
	}
	public void setPublishedDate(LocalDateTime publishedDate) {
		this.publishedDate = publishedDate;
	}
	public boolean isPublished() {
		return published;
	}
	public void setPublished(boolean published) {
		this.published = published;
	}
	public List<Comment> getComment() {
		return comment;
	}
	public void setComment(List<Comment> comment) {
		this.comment = comment;
	}
	public Blog(int id, @NotBlank(message = "title should not be empty") String title,
			@NotBlank(message = "give some category") String category,
			@NotBlank(message = "enter data") @Size(min = 50, max = 250, message = "please check size") String data,
			@NotNull(message = "Please enter the published date") @FutureOrPresent(message = "The published date must be in the present or future") LocalDateTime publishedDate,
			boolean published, List<Comment> comment) {
		super();
		this.id = id;
		this.title = title;
		this.category = category;
		this.data = data;
		this.publishedDate = publishedDate;
		this.published = published;
		this.comment = comment;
	}
	
	
	
	

}
