package com.monocept.app.dto;



import com.fasterxml.jackson.annotation.JsonBackReference;
import com.monocept.app.entity.Blog;

import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

public class CommentDTO {
	private int id;

	@NotBlank(message = "Description must not be blank. Please provide a description to add more details.")
	@Size(min = 50, max = 200, message = "Description must be between 50 and 200 characters.")
	private String description;

	private BlogDTO blogDTO;
	private Blog blog;
	

	public Blog getBlog() {
		return blog;
	}

	public void setBlog(Blog blog) {
		this.blog = blog;
	}

	public CommentDTO(int id,
			@NotBlank(message = "Description must not be blank. Please provide a description to add more details.") @Size(min = 50, max = 200, message = "Description must be between 50 and 200 characters.") String description,
			BlogDTO blogDTO) {
		super();
		this.id = id;
		this.description = description;
		this.blogDTO = blogDTO;
	}

	public CommentDTO() {
		super();
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public BlogDTO getBlogDTO() {
		return blogDTO;
	}

	public void setBlogDTO(BlogDTO blogDTO) {
		this.blogDTO = blogDTO;
	}

	@Override
	public String toString() {
		return "CommentDTO [id=" + id + ", description=" + description + ", blogDTO=" + blogDTO + "]";
	}

	
	
	
}
